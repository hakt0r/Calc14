{"version":3,"sources":["logo.svg","App.js","index.js"],"names":["defaultState","mem","field","previous","operation","store","createStore","state","action","value","type","Number","current","fieldAsNumber","result","window","__REDUX_DEVTOOLS_EXTENSION__","SpecialButton","dispatch","useDispatch","Button","variant","onClick","e","NumberButton","OperationButton","useSelector","Display","FormControl","TinyDisplay","className","App","src","logo","Row","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.baa1b9f6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.7e6849ae.svg\";","// yarn add redux react-redux\n\nimport { Provider, useDispatch, useSelector } from 'react-redux';\nimport { createStore }              from 'redux';\nimport { Button, FormControl, Row } from 'react-bootstrap';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport logo from \"./logo.svg\";\n\nconst defaultState = {\n  mem:       0,\n  field:     '',\n  previous:  null,\n  operation: null\n}\n\nconst reducer = ( state = defaultState, action ) => {\n\n  const { value } = action;\n\n  switch ( action.type ){\n\n    case \"countdown\":\n        return {\n          field: Number(state.field) - 1\n        }\n\n    case \"number\":\n      const current = state.field == 0 ? '' : state.field;\n      return {\n        ...state,\n        field: `${current}${value}`\n      };\n\n    case \"clear\": return { ...state, field: '' };\n\n    case \"memclear\":  return { ...state, mem: 0 };\n    case \"memplus\":   return { ...state, mem: state.mem + Number(state.field) };\n    case \"memrecall\": return { ...state, field: state.mem };\n\n    case \"operation\":\n      const fieldAsNumber = Number(state.field);\n\n      if ( value === '=' || state.previous !== null ){\n        let result = Number(state.previous);\n        \n        switch ( state.operation ){\n          case \"+\": result += fieldAsNumber; break;\n          case \"/\": result /= fieldAsNumber; break;\n          case \"-\": result -= fieldAsNumber; break;\n          case \"*\": result *= fieldAsNumber; break;\n        }\n\n        if ( value === '=' ){\n          return {\n            ...state, \n            field: result,\n            previous: null,\n            operation: null };\n        } else {\n          return {\n            ...state,\n            previous: result,\n            operation: value,\n            field:''\n          };\n        }\n\n      } else return {\n        ...state,\n        previous:  fieldAsNumber,\n        operation: value,\n        field:     ''\n      }\n\n    default: return state;\n  }\n}\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n); \n\nfunction SpecialButton({value,type}){\n  const dispatch = useDispatch();\n  return <Button\n    variant=\"secondary\"\n    onClick={ e => dispatch({type}) }\n  >{value}</Button>\n}\n\nfunction NumberButton({value}){\n  const dispatch = useDispatch();\n  return <Button\n    variant=\"secondary\"\n    onClick={ e => dispatch({type:'number',value}) }\n  >{value}</Button>\n}\n\nfunction OperationButton ({value}){\n  const operation = useSelector( state => state.operation );\n  const dispatch = useDispatch();\n  return <Button\n    variant={ operation === value ? \"warning\" : \"primary\" }\n    onClick={ e => dispatch({type:'operation',value:value}) }\n  >{value}</Button>;\n}\n\nfunction Display (){\n  const field = useSelector( state => state.field );\n  return <FormControl value={field}/>;\n}\n\nfunction TinyDisplay (){\n  const previous = useSelector( state => state.previous );\n  return <span className=\"tiny\">{previous}</span>;\n}\n\nfunction App() {\n  return <Provider store={store}>\n    <img src={logo}/>\n    <Row>\n      <Display/>\n      <TinyDisplay/>\n    </Row>\n    <Row>\n      <NumberButton value=\"1\"/>\n      <NumberButton value=\"2\"/>\n      <NumberButton value=\"3\"/>\n      <OperationButton value=\"+\"/>\n      <SpecialButton type=\"clear\" value=\"C\"/>\n    </Row>\n    <Row>\n      <NumberButton    value=\"4\"/>\n      <NumberButton    value=\"5\"/>\n      <NumberButton    value=\"6\"/>    \n      <OperationButton value=\"-\"/>\n      <SpecialButton type=\"memclear\" value=\"MC\"/>\n    </Row>\n    <Row>\n      <NumberButton    value=\"7\"/>\n      <NumberButton    value=\"8\"/>\n      <NumberButton    value=\"9\"/>\n      <OperationButton value=\"/\"/>\n      <SpecialButton type=\"memplus\" value=\"M+\"/>\n    </Row>\n    <Row>\n      <NumberButton    value=\"0\"/>\n      <NumberButton    value=\".\"/>\n      <OperationButton value=\"=\"/>\n      <OperationButton value=\"*\"/>\n      <SpecialButton type=\"memrecall\" value=\"MR\"/>\n    </Row>\n  </Provider>;\n}\n\nexport default App;\n","\nimport React    from 'react';\nimport ReactDOM from 'react-dom';\nimport App      from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}